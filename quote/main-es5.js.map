{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/quote.html","webpack:///src/app/app.module.ts","webpack:///src/app/quote/user-quote-input/user-quote-input.component.ts","webpack:///src/app/quote/user-quote-input/user-quote-input.component.html","webpack:///src/app/quote/user-quote-vote/dataSource.ts","webpack:///src/app/quote/user-quote-vote/quoteVoteModel.ts","webpack:///src/app/quote/user-quote-vote/user-quote-vote.component.ts","webpack:///src/app/quote/user-quote-vote/user-quote-vote.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","UserQuoteInputComponent","text0","hello1","alert","onSubmit","quotes","quote","authour","rating","quoteVote","UserQuoteVoteComponent","quote1","Like","Dislike","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './quote.html',\n  styleUrls: ['../../node_modules/bootstrap/dist/css/bootstrap.css','./app.component.css']\n})\nexport class AppComponent {\n  title = 'quote';\n}\n","<!DOCTYPE html>\r\n\r\n<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n\t\t<meta charset=\"utf-8\" />\r\n\t\t<title></title>\r\n</head>\r\n<body>\r\n\t<div class=\"jumbotron\">\r\n\t\t<h3 class=\"logo\">Memorable Quotes</h3>\r\n\t</div>\r\n\r\n\t<app-user-quote-vote></app-user-quote-vote>\r\n\t<app-user-quote-input></app-user-quote-input>\r\n\r\n</body>\r\n</html>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserQuoteInputComponent } from './quote/user-quote-input/user-quote-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserQuoteVoteComponent } from './quote/user-quote-vote/user-quote-vote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserQuoteInputComponent,\n    UserQuoteVoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { userQuote } from './userQuoteModel'\nimport { quoteVote } from '../user-quote-vote/quoteVoteModel';\n@Component({\n  selector: 'app-user-quote-input',\n  templateUrl: './user-quote-input.component.html',\n  styleUrls: ['./user-quote-input.component.css']\n})\nexport class UserQuoteInputComponent {\n  @Input() text1:''; text2:''; \n\n  text0=\"Hi testing\";\n\n  hello1 = quoteVote;\n\n \n // constructor(saying,sayer){\n  //  this.saying=saying;\n    //this.sayer=sayer;\n  //}\n\n  \n\n    onSubmit() {\n      alert(\"Function Running\");\n       //hello1=new quoteVote [5] ('one', 'two' ,0);\n    }\n\n  }\n  \n\n  //userQuote0= new userQuote (input:saying, name:sayer)\n\n  //userQuote1 = new quoteVote( this.saying , this.sayer, 0);\n\n  \n\n//}\n\n\n\n\n\n\n","\n<div class=\"userInput\">\n    <h3>Ever heard something memorable? Share It!</h3>\n    <input type=\"text\" [(ngModel)]=\"text1\" />\n\n    <div class=\"userQuote\">\n      <form (ngSubmit)=\"onSubmit()\">\n      <p>Please tell us your Name, one day this may be important!</p>\n      <input type=\"text\" [(ngModel)]=\"text2\" />\n      <p>\n        you have typed \"  {{text1}} \"\n        {{text2}}\n      </p>\n      </form>\n\n      <p>you Said: {{text1}} </p>\n      <button type=\"submit\" class=\"btn btn-primary\" id=\"submitButton\" (click)=\"onSubmit()\" > Submit</button>\n\n      <p id=\"quote\">{{text0}}</p>\n      <p id=\"authour\">{{text2}}</p>\n      <p id=\"quote\">{{text1}}</p>\n    </div>\n</div>\n","/************************************************************\r\n *  Creating a list of Quotes from the Constructor Template\r\n *\r\n ***********************************************************/\r\n\r\n/*************************************************\r\n * Import the Model with the constructor details\r\n *************************************************/\r\n\r\nimport { quoteVote } from './quoteVoteModel';\r\n\r\n/*****************************************************************************************************\r\n * Create an array of Quotes with properties specified in the constructor for export to the component\r\n *****************************************************************************************************/\r\n\r\nexport const quotes: quoteVote[] = [\r\n  { quote:\"Victory belongs to the most perservering\", authour:\"Napoleon Bonaparte\", rating:5},\r\n  { quote: \"History is written by the Victor\", authour: \"Winston Churchill\", rating: 5 },\r\n  { quote: \"A single death is a tragedy, a million deaths is a statistic\", authour: \"Joseph Stalin\", rating: 5 },\r\n  { quote: \"Give a man a fish, feed him for a day, teach a man to fish, feed him for a lifetime\", authour: \"unknown\", rating: 5 }\r\n  \r\n]\r\n  \r\n/*\r\n * Access these arrays in the View by specifying their array number (0-n) and constructor attribute (.authour)\r\n * e.g {{quoteVote[0].author}}\r\n */\r\n","/*\r\n * Create Data Models to define Objects and their Properties\r\n */\r\n\r\n/****************************************************************************************************************\r\n * Classes are objects in angular that can be used across the component or applicaiton, depending on user needs\r\n * Export them for use, then import them wherever you would like their definitions to be used \r\n ****************************************************************************************************************/\r\n\r\nexport class quoteVote {\r\n  quote;\r\n  authour;\r\n  rating;\r\n  //voteCount;\r\n\r\n  constructor(quote,authour,rating) {\r\n\r\n    this.quote =  quote;\r\n    this.authour = authour;\r\n    this.rating = rating;\r\n    //this.voteCount = 1 ;\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { quoteVote } from './quoteVoteModel';\nimport { quotes } from './dataSource';\n@Component({\n  selector: 'app-user-quote-vote',\n  templateUrl: './user-quote-vote.component.html',\n  styleUrls: ['./user-quote-vote.component.css']\n})\nexport class UserQuoteVoteComponent {\n\n  quote1 = quotes;\n\n  Like() {\n    alert(\"Clicked\");\n    quotes[0].rating = 10;\n  }\n\n  Dislike() {\n    alert(\"Clicked\");\r\n    quotes[0].rating = 0;\r\n  }\n\n}\n","\n  <div id=\"quoteBox\">\n    <div id=\"centerObject\">\n      <p id=\"quote\">{{quote1[0].quote}}</p>\n      <p id=\"authour\">{{quote1[0].authour}}</p>\n      <p>Rating:<span class=\"glyphicon glyphicon-star\"></span>{{quote1[0].rating}}</p>\n      <button class=\"btn btn-primary\" id=\"likeButton\" (click)=\"Like()\"> Like</button>\n      <button class=\"btn btn-primary\" id=\"dislikeButton\" (click)=\"Dislike()\"> Dislike</button>\n    </div>\n  </div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}