{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/quote.html","./src/app/app.module.ts","./src/app/quote/user-quote-input/user-quote-input.component.ts","./src/app/quote/user-quote-input/user-quote-input.component.html","./src/app/quote/user-quote-vote/dataSource.ts","./src/app/quote/user-quote-vote/quoteVoteModel.ts","./src/app/quote/user-quote-vote/user-quote-vote.component.ts","./src/app/quote/user-quote-vote/user-quote-vote.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './quote.html',\n  styleUrls: ['../../node_modules/bootstrap/dist/css/bootstrap.css','./app.component.css']\n})\nexport class AppComponent {\n  title = 'quote';\n}\n","<!DOCTYPE html>\r\n\r\n<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n\t\t<meta charset=\"utf-8\" />\r\n\t\t<title></title>\r\n</head>\r\n<body>\r\n\t<div class=\"jumbotron\">\r\n\t\t<h3 class=\"logo\">Memorable Quotes</h3>\r\n\t</div>\r\n\r\n\t<app-user-quote-vote></app-user-quote-vote>\r\n\t<app-user-quote-input></app-user-quote-input>\r\n\r\n</body>\r\n</html>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserQuoteInputComponent } from './quote/user-quote-input/user-quote-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserQuoteVoteComponent } from './quote/user-quote-vote/user-quote-vote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserQuoteInputComponent,\n    UserQuoteVoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { userQuote } from './userQuoteModel'\nimport { quoteVote } from '../user-quote-vote/quoteVoteModel';\n@Component({\n  selector: 'app-user-quote-input',\n  templateUrl: './user-quote-input.component.html',\n  styleUrls: ['./user-quote-input.component.css']\n})\nexport class UserQuoteInputComponent {\n  @Input() text1:''; text2:''; \n\n  text0=\"Hi testing\";\n\n  hello1 = quoteVote;\n\n \n // constructor(saying,sayer){\n  //  this.saying=saying;\n    //this.sayer=sayer;\n  //}\n\n  \n\n    onSubmit() {\n      alert(\"Function Running\");\n       //hello1=new quoteVote [5] ('one', 'two' ,0);\n    }\n\n  }\n  \n\n  //userQuote0= new userQuote (input:saying, name:sayer)\n\n  //userQuote1 = new quoteVote( this.saying , this.sayer, 0);\n\n  \n\n//}\n\n\n\n\n\n\n","\n<div class=\"userInput\">\n    <h3>Ever heard something memorable? Share It!</h3>\n    <input type=\"text\" [(ngModel)]=\"text1\" />\n\n    <div class=\"userQuote\">\n      <form (ngSubmit)=\"onSubmit()\">\n      <p>Please tell us your Name, one day this may be important!</p>\n      <input type=\"text\" [(ngModel)]=\"text2\" />\n      <p>\n        you have typed \"  {{text1}} \"\n        {{text2}}\n      </p>\n      </form>\n\n      <p>you Said: {{text1}} </p>\n      <button type=\"submit\" class=\"btn btn-primary\" id=\"submitButton\" (click)=\"onSubmit()\" > Submit</button>\n\n      <p id=\"quote\">{{text0}}</p>\n      <p id=\"authour\">{{text2}}</p>\n      <p id=\"quote\">{{text1}}</p>\n    </div>\n</div>\n","/************************************************************\r\n *  Creating a list of Quotes from the Constructor Template\r\n *\r\n ***********************************************************/\r\n\r\n/*************************************************\r\n * Import the Model with the constructor details\r\n *************************************************/\r\n\r\nimport { quoteVote } from './quoteVoteModel';\r\n\r\n/*****************************************************************************************************\r\n * Create an array of Quotes with properties specified in the constructor for export to the component\r\n *****************************************************************************************************/\r\n\r\nexport const quotes: quoteVote[] = [\r\n  { quote:\"Victory belongs to the most perservering\", authour:\"Napoleon Bonaparte\", rating:5},\r\n  { quote: \"History is written by the Victor\", authour: \"Winston Churchill\", rating: 5 },\r\n  { quote: \"A single death is a tragedy, a million deaths is a statistic\", authour: \"Joseph Stalin\", rating: 5 },\r\n  { quote: \"Give a man a fish, feed him for a day, teach a man to fish, feed him for a lifetime\", authour: \"unknown\", rating: 5 }\r\n  \r\n]\r\n  \r\n/*\r\n * Access these arrays in the View by specifying their array number (0-n) and constructor attribute (.authour)\r\n * e.g {{quoteVote[0].author}}\r\n */\r\n","/*\r\n * Create Data Models to define Objects and their Properties\r\n */\r\n\r\n/****************************************************************************************************************\r\n * Classes are objects in angular that can be used across the component or applicaiton, depending on user needs\r\n * Export them for use, then import them wherever you would like their definitions to be used \r\n ****************************************************************************************************************/\r\n\r\nexport class quoteVote {\r\n  quote;\r\n  authour;\r\n  rating;\r\n  //voteCount;\r\n\r\n  constructor(quote,authour,rating) {\r\n\r\n    this.quote =  quote;\r\n    this.authour = authour;\r\n    this.rating = rating;\r\n    //this.voteCount = 1 ;\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { quoteVote } from './quoteVoteModel';\nimport { quotes } from './dataSource';\n@Component({\n  selector: 'app-user-quote-vote',\n  templateUrl: './user-quote-vote.component.html',\n  styleUrls: ['./user-quote-vote.component.css']\n})\nexport class UserQuoteVoteComponent {\n\n  quote1 = quotes;\n\n  Like() {\n    alert(\"Clicked\");\n    quotes[0].rating = 10;\n  }\n\n  Dislike() {\n    alert(\"Clicked\");\r\n    quotes[0].rating = 0;\r\n  }\n\n}\n","\n  <div id=\"quoteBox\">\n    <div id=\"centerObject\">\n      <p id=\"quote\">{{quote1[0].quote}}</p>\n      <p id=\"authour\">{{quote1[0].authour}}</p>\n      <p>Rating:<span class=\"glyphicon glyphicon-star\"></span>{{quote1[0].rating}}</p>\n      <button class=\"btn btn-primary\" id=\"likeButton\" (click)=\"Like()\"> Like</button>\n      <button class=\"btn btn-primary\" id=\"dislikeButton\" (click)=\"Dislike()\"> Dislike</button>\n    </div>\n  </div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}